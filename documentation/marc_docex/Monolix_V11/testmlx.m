function varargout = testmlx(varargin)
%TESTMLX  hypothesis testing, called by MONOLIX

%  Marc Lavielle
%  Version 1.1 ;  2005/02/18

%This program is free software; you can redistribute it and/or modify it
%under the terms of the GNU General Public License as published by the Free
%Software Foundation; either version 2 of the License, or (at your option)
%any later version.
%This program is distributed in the hope that it will be useful, but
%WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
%or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
%for more details (http://www.gnu.org/copyleft/gpl.html).

% Last Modified by GUIDE v2.5 12-Feb-2005 22:13:39

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
    'gui_Singleton',  gui_Singleton, ...
    'gui_OpeningFcn', @testmlx_OpeningFcn, ...
    'gui_OutputFcn',  @testmlx_OutputFcn, ...
    'gui_LayoutFcn',  @testmlx_LayoutFcn, ...
    'gui_Callback',   []);
if nargin & isstr(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before testmlx is made visible.
function testmlx_OpeningFcn(hObject, eventdata, handles, varargin)
handles.output = hObject;

% Update handles structure
%P=[8,620,700,430];
P=[.002 .58 .5 .39];
set(hObject,'unit','normalized','position',P);

s=varargin(1);
s=s{:};
handles.fig=varargin(2);
itest=varargin(3);
itest=itest{:};
handles.itest=itest;
handles.parameters=s;

clx=0.04;
cly=0.05;
xl=0.05; xll=xl-0.0;
yl=0.05; yll=yl-0.0;
dy=0.1;

P0=get(handles.text_h0,'Position');
P1=get(handles.text_h1,'Position');
h=findobj('tag','figure_test');
figure(h)
set([handles.text01 handles.text02 handles.text03],'visible','off');
set([handles.text11 handles.text12 handles.text13],'visible','off');
set([handles.res01 handles.res02 handles.res03],'visible','off');
set([handles.res11 handles.res12 handles.res13],'visible','off');
set([handles.text7 handles.dec1 handles.dec2 handles.dec3 handles.pval],'visible','off');
if isfield(handles,'hmcov0') 
 set([handles.hmcov0 handles.hmcov1],'visible','off');
end;
if isfield(handles,'edit_fini0') 
 set([handles.edit_fini0 handles.edit_fini1],'visible','off');
end;
if isfield(handles,'covstruct0')
 set([handles.covstruct0 handles.covstruct1],'visible','off');
end;
   if itest==1
    mcov=getfield(s,'mcov');
    lcov_ini=getfield(s,'lcov_ini');
    [ncov,nphi]=size(mcov);
    posx0=P0(1)+P0(3)/2-nphi*clx/2;
    posy0=P0(2)-dy;
    pos0=[posx0 posy0 clx cly];
    handles.hmcov0=zeros(ncov,nphi);
    posx1=P1(1)+P1(3)/2-nphi*clx/2;
    posy1=P1(2)-dy;
    pos1=[posx1 posy1 clx cly];
    handles.hmcov0=zeros(ncov,nphi);
    handles.hmcov1=zeros(ncov,nphi);
    for k1=1:ncov
        pos0(1)=posx0;
        pos1(1)=posx1;
        for k2=1:nphi
            handles.hmcov0(k1,k2)=uicontrol('units','normalized','style','pushbutton','position',pos0,'string',mcov(k1,k2));
            handles.hmcov1(k1,k2)=uicontrol('units','normalized','style','pushbutton','position',pos1,'string',mcov(k1,k2));
            pos0(1)=pos0(1)+clx;
            pos1(1)=pos1(1)+clx;
        end;
        pos0(2)=pos0(2)-cly;
        pos1(2)=pos1(2)-cly;
    end;
    if ispc
        set(handles.hmcov0,'BackgroundColor','white');
        set(handles.hmcov1,'BackgroundColor','white');
    else
        set(handles.hmcov0,'BackgroundColor',get(0,'defaultUicontrolBackgroundColor'));
        set(handles.hmcov1,'BackgroundColor',get(0,'defaultUicontrolBackgroundColor'));
    end
    Str=['strh=get(gcbo,''string''); set(gcbo,''string'', num2str(1-str2num(strh)));'];
    set(handles.hmcov0,'Callback',Str);
    set(handles.hmcov1,'Callback',Str);
    %
%     posx0=posx0+nphi*(clx-xl)/2;
%     posy0=posy0-2*dy;
%     pos0=[posx0 posy0 xl yl];
%     posx1=posx1+nphi*(clx-xl)/2;
%     posy1=posy1-2*dy;
%     pos1=[posx1 posy1 xl yl];
%     handles.edit_fini0=zeros(ncov,nphi);
%     handles.edit_fini1=zeros(ncov,nphi);
%     for k1=1:ncov
%         pos0(1)=posx0;
%         pos1(1)=posx1;
%         for k2=1:nphi
%             handles.edit_fini0(k1,k2)=uicontrol('units','normalized','style','edit','position',pos0,'string',lcov_ini(k1,k2));
%             handles.edit_fini1(k1,k2)=uicontrol('units','normalized','style','edit','position',pos1,'string',lcov_ini(k1,k2));
%             pos0(1)=pos0(1)+xll;
%             pos1(1)=pos1(1)+xll;
%         end;
%         pos0(2)=pos0(2)-yll;
%         pos1(2)=pos1(2)-yll;
%     end;
%     if ispc
%         set(handles.edit_fini0,'BackgroundColor','white');
%         set(handles.edit_fini1,'BackgroundColor','white');
%     else
%         set(handles.edit_fini0,'BackgroundColor',get(0,'defaultUicontrolBackgroundColor'));
%         set(handles.edit_fini1,'BackgroundColor',get(0,'defaultUicontrolBackgroundColor'));
%     end
 %set([handles.hmcov0 handles.hmcov1 handles.edit_fini0 handles.edit_fini1 ],'visible','on','Fontweight','demi','Fontunits','normalized');
 set([handles.hmcov0 handles.hmcov1 ],'visible','on','Fontweight','demi','Fontunits','normalized');
else
    covstruct=getfield(handles.parameters,'covstruct');
    [nphi,nphi]=size(covstruct);
    posx0=P0(1)+P0(3)/2-nphi*clx/2;
    posy0=P0(2)-dy;
    pos0=[posx0 posy0 clx cly];
    handles.covstruct0=zeros(nphi,nphi);
    posx1=P1(1)+P1(3)/2-nphi*clx/2;
    posy1=P1(2)-dy;
    pos1=[posx1 posy1 clx cly];
    handles.covstruct0=zeros(nphi,nphi);
    handles.covstruct1=zeros(nphi,nphi);
    for k1=1:nphi
        pos0(1)=posx0;
        pos1(1)=posx1;
        for k2=1:nphi
            handles.covstruct0(k1,k2)=uicontrol('units','normalized','style','pushbutton','position',pos0,'string',covstruct(k1,k2));
            handles.covstruct1(k1,k2)=uicontrol('units','normalized','style','pushbutton','position',pos1,'string',covstruct(k1,k2));
            pos1(1)=pos1(1)+clx;
            pos0(1)=pos0(1)+clx;
        end;
        pos1(2)=pos1(2)-cly;
        pos0(2)=pos0(2)-cly;
    end;
    if ispc
        set(handles.covstruct0,'BackgroundColor','white');
        set(handles.covstruct1,'BackgroundColor','white');
    else
        set(handles.covstruct0,'BackgroundColor',get(0,'defaultUicontrolBackgroundColor'));
        set(handles.covstruct1,'BackgroundColor',get(0,'defaultUicontrolBackgroundColor'));
    end
    Str0=' testmlx(''covstruct0_Callback'',gcbo,[],guidata(gcbo));';
    Str1=' testmlx(''covstruct1_Callback'',gcbo,[],guidata(gcbo));';
    set(handles.covstruct0,'Callback',Str0);
    set(handles.covstruct1,'Callback',Str1);
 set([handles.covstruct0 handles.covstruct1],'visible','on','Fontweight','demi','Fontunits','normalized');
end;
guidata(hObject, handles);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function varargout = testmlx_OutputFcn(hObject, eventdata, handles)
varargout{1} = handles.output;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function pushbutton_close_Callback(hObject, eventdata, handles)
if isfield(handles,'fig'); 
    %close(handles.fig{:}); 
    set(handles.fig{:},'visible','off')
end;
close gcf

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function pushbutton_run_Callback(hObject, eventdata, handles)
set([handles.text01 handles.text02 handles.text03],'visible','off');
set([handles.text11 handles.text12 handles.text13],'visible','off');
set([handles.res01 handles.res02 handles.res03],'visible','off');
set([handles.res11 handles.res12 handles.res13],'visible','off');
set([handles.text7 handles.dec1 handles.dec2 handles.dec3 handles.pval],'visible','off');
c1=get(handles.pushbutton_run,'backgroundcolor');
set(handles.pushbutton_run,'string','WAIT ...','backgroundcolor','red');
pause(1)
s0=handles.parameters;
[ncov,nphi]=size(s0.mcov);
itest=handles.itest;
if itest==1
    smcov0=get(handles.hmcov0,'string');
    nb_covariates=length(smcov0)/nphi;
    s0.mcov=reshape(str2num(cell2mat(smcov0)),nb_covariates,nphi);
%     s0.lcov_ini=zeros(nb_covariates,nphi);
%     for k1=1:nb_covariates
%         for k2=1:nphi
%             s0.lcov_ini(k1,k2)=str2num(get(handles.edit_fini0(k1,k2),'string'));
%         end;
%     end;
else
    covstruct0=get(handles.covstruct0,'string');
    s0.covstruct=reshape(str2num(cell2mat(covstruct0)),nphi,nphi);
end;
hfig=handles.fig{:};
figure(hfig); clf; 
addmenumlx(hfig);
disp('******************************************************************')
disp('HYPOTHESIS H0:')
saemmlx(s0,hfig);
eval(['load(''',s0.resultats,''');']);
%fonctionl=[fonction,'l'];
%logl0=lvraismlx(fonction,y,design,nb_measures,id,indio,mprior_phi1,Gamma2_phi1,sigma2,mpost_phi,vpost_phi,i1,i0,Klog);
logl0=lvraismlx(s0);
logl0=real(logl0);
nparam0=sum(sum(s0.mcov)) + sum(sum(triu(s0.covstruct))) +1;
AIC0=-2*logl0 + 2*nparam0;
BIC0=-2*logl0 + log(size(y,1))*nparam0;
set([handles.text01 handles.text02 handles.text03],'visible','on');
set([handles.res01 handles.res02 handles.res03],'visible','on');
set(handles.res01,'string',num2str(AIC0));
set(handles.res02,'string',num2str(BIC0));
set(handles.res03,'string',num2str(-2*logl0));


s1=s0;
if itest==1
    smcov1=get(handles.hmcov1,'string');
    s1.mcov=reshape(str2num(cell2mat(smcov1)),nb_covariates,nphi);
%     s1.lcov_ini=zeros(nb_covariates,nphi);
%     for k1=1:nb_covariates
%         for k2=1:nphi
%             s1.lcov_ini(k1,k2)=str2num(get(handles.edit_fini1(k1,k2),'string'));
%         end;
%     end;
else
    covstruct1=get(handles.covstruct1,'string');
    s1.covstruct=reshape(str2num(cell2mat(covstruct1)),nphi,nphi);
end;
s1.resultats='temp_testmlx.mat';
figure(hfig); clf; 
addmenumlx(hfig);
disp('******************************************************************')
disp('HYPOTHESIS H1:')
saemmlx(s1,hfig);
eval(['load(''',s1.resultats,''');']);
%fonctionl=[fonction,'l'];
%logl1=lvraismlx(fonction,y,design,nb_measures,id,indio,mprior_phi1,Gamma2_phi1,sigma2,mpost_phi,vpost_phi,i1,i0,Klog);
logl1=lvraismlx(s1);
logl1=real(logl1);
nparam1=sum(sum(s1.mcov)) + sum(sum(triu(s1.covstruct))) + 1;
AIC1=-2*logl1 + 2*nparam1;
BIC1=-2*logl1 + log(size(y,1))*nparam1;
set([handles.text11 handles.text12 handles.text13],'visible','on');
set([handles.res11 handles.res12 handles.res13],'visible','on');
set(handles.res11,'string',num2str(AIC1));
set(handles.res12,'string',num2str(BIC1));
set(handles.res13,'string',num2str(-2*logl1));

stat_test=2*(logl1-logl0);
dof=max(nparam1-nparam0,0);
if dof>0
    if itest==1
    pvalue=1-chi2cdf_mlx(stat_test,dof);
    else
        ddiag=sum(diag(s1.covstruct-s0.covstruct));
     pvalue=1-chi2cdf_mlx(stat_test*(2^ddiag),dof);
    end;
    set(handles.pval,'string',['(',num2str(pvalue,'%6.4f'),')']);
    decision=pvalue<0.05;
else
    decision=logl1>logl0;
    set(handles.pval,'string','');
end;
if decision==1
    decision_str3='H_1';
else
    decision_str3='H_0';
end;
if AIC1<AIC0
    decision_str1='H_1';
else
    decision_str1='H_0';
end;
if BIC1<BIC0
    decision_str2='H_1';
else
    decision_str2='H_0';
end;

set([handles.text7 handles.dec1 handles.dec2 handles.dec3 handles.pval],'visible','on');
set(handles.dec1,'string',decision_str1);
set(handles.dec2,'string',decision_str2);
set(handles.dec3,'string',decision_str3);
set(handles.pushbutton_run,'string','RUN','backgroundcolor',c1);
delete(s1.resultats);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function covstruct0_Callback(hObject, eventdata, handles)
hc=handles.covstruct0;
[i,j]=find(hc==hObject);
strh=get(hObject,'string'); 
strh1=num2str(1-str2num(strh));
set(hObject,'string', strh1);
if i  ~= j
    set(hc(j,i),'string', strh1);
    if strh1=='1'
        set(hc(i,i),'string', '1');
        set(hc(j,j),'string', '1');
    end;
else
    if str2num(strh)==1
        set(hc(i,:),'string', 0);
        set(hc(:,j),'string', 0);
    end;
end;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function covstruct1_Callback(hObject, eventdata, handles)
hc=handles.covstruct1;
[i,j]=find(hc==hObject);
strh=get(hObject,'string'); 
strh1=num2str(1-str2num(strh));
set(hObject,'string', strh1);
if i  ~= j
    set(hc(j,i),'string', strh1);
    if strh1=='1'
        set(hc(i,i),'string', '1');
        set(hc(j,j),'string', '1');
    end;
else
    if str2num(strh)==1
        set(hc(i,:),'string', 0);
        set(hc(:,j),'string', 0);
    end;
end;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function p = chi2cdf_mlx(x,v)
if x>0
    p = gammainc(x/2, v/2);
else
    p=0;
end;


% --- Creates and returns a handle to the GUI figure. 
function h1 = testmlx_LayoutFcn(policy)
% policy - create a new figure or use a singleton. 'new' or 'reuse'.

persistent hsingleton;
if strcmpi(policy, 'reuse') & ishandle(hsingleton)
    h1 = hsingleton;
    return;
end

appdata = [];
appdata.GUIDEOptions = struct(...
    'active_h', [], ...
    'taginfo', struct(...
    'figure', [], ...
    'pushbutton', [], ...
    'text', 22), ...
    'override', 0, ...
    'release', 13, ...
    'resize', 'none', ...
    'accessibility', 'callback', ...
    'mfile', [], ...
    'callbacks', [], ...
    'singleton', [], ...
    'syscolorfig', [], ...
    'lastSavedFile', 'D:\Monolix\Logiciel\Monolix\testmlx.m', ...
    'blocking', 0);
appdata.lastValidTag = 'figure_test';
appdata.GUIDELayoutEditor = [];

h1 = figure(...
'Units',get(0,'defaultfigureUnits'),...
'PaperUnits',get(0,'defaultfigurePaperUnits'),...
'Color',[0.925490196078431 0.913725490196078 0.847058823529412],...
'Colormap',[0 0 0.5625;0 0 0.625;0 0 0.6875;0 0 0.75;0 0 0.8125;0 0 0.875;0 0 0.9375;0 0 1;0 0.0625 1;0 0.125 1;0 0.1875 1;0 0.25 1;0 0.3125 1;0 0.375 1;0 0.4375 1;0 0.5 1;0 0.5625 1;0 0.625 1;0 0.6875 1;0 0.75 1;0 0.8125 1;0 0.875 1;0 0.9375 1;0 1 1;0.0625 1 1;0.125 1 0.9375;0.1875 1 0.875;0.25 1 0.8125;0.3125 1 0.75;0.375 1 0.6875;0.4375 1 0.625;0.5 1 0.5625;0.5625 1 0.5;0.625 1 0.4375;0.6875 1 0.375;0.75 1 0.3125;0.8125 1 0.25;0.875 1 0.1875;0.9375 1 0.125;1 1 0.0625;1 1 0;1 0.9375 0;1 0.875 0;1 0.8125 0;1 0.75 0;1 0.6875 0;1 0.625 0;1 0.5625 0;1 0.5 0;1 0.4375 0;1 0.375 0;1 0.3125 0;1 0.25 0;1 0.1875 0;1 0.125 0;1 0.0625 0;1 0 0;0.9375 0 0;0.875 0 0;0.8125 0 0;0.75 0 0;0.6875 0 0;0.625 0 0;0.5625 0 0],...
'IntegerHandle','off',...
'InvertHardcopy',get(0,'defaultfigureInvertHardcopy'),...
'MenuBar',get(0,'defaultfigureMenuBar'),...
'Name','test1',...
'NumberTitle',get(0,'defaultfigureNumberTitle'),...
'PaperPosition',[0.25 4 8 6],...
'PaperSize',[20.98404194812 29.67743169791],...
'PaperType',get(0,'defaultfigurePaperType'),...
'Position',[-0.000714285714285714 0.5 0.512142857142857 0.45],...
'Renderer',get(0,'defaultfigureRenderer'),...
'RendererMode','manual',...
'HandleVisibility','callback',...
'Tag','figure_test',...
'UserData',[],...
...
'Visible','on',...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'pushbutton1';

h2 = uicontrol(...
'Parent',h1,...
'Units','normalized',...
'FontUnits','normalized',...
'BackgroundColor',[0.588235294117647 0.796078431372549 0.796078431372549],...
'Callback','test1(''pushbutton1_Callback'',gcbo,[],guidata(gcbo))',...
'FontSize',0.463768115942029,...
'FontWeight','bold',...
'ListboxTop',0,...
'Position',[1.51324965132497 0.00600600600600601 0.139470013947001 0.048048048048048],...
'String','Quit',...
'Tag','pushbutton1',...
...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'pushbutton2';

h3 = uicontrol(...
'Parent',h1,...
'Units','normalized',...
'FontUnits','normalized',...
'BackgroundColor',[0.588235294117647 0.796078431372549 0.796078431372549],...
'Callback','test1(''pushbutton2_Callback'',gcbo,[],guidata(gcbo))',...
'FontSize',0.463768115942029,...
'FontWeight','bold',...
'ListboxTop',0,...
'Position',[1.51324965132497 0.00600600600600601 0.139470013947001 0.048048048048048],...
'String','Quit',...
'Tag','pushbutton2',...
...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'pushbutton_close';

h4 = uicontrol(...
'Parent',h1,...
'Units','normalized',...
'FontUnits','normalized',...
'BackgroundColor',[0.588235294117647 0.796078431372549 0.796078431372549],...
'Callback','testmlx(''pushbutton_close_Callback'',gcbo,[],guidata(gcbo))',...
'FontSize',0.46031746031746,...
'ListboxTop',0,...
'Position',[0.864714086471409 0.841101694915254 0.111576011157601 0.0593220338983051],...
'String','CLOSE',...
'Tag','pushbutton_close',...
...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'pushbutton4';

h5 = uicontrol(...
'Parent',h1,...
'Units','normalized',...
'FontUnits','normalized',...
'BackgroundColor',[0.588235294117647 0.796078431372549 0.796078431372549],...
'Callback','test1(''pushbutton4_Callback'',gcbo,[],guidata(gcbo))',...
'FontSize',0.484848484848485,...
'FontWeight','bold',...
'ListboxTop',0,...
'Position',[1.52719665271967 -0.00900900900900901 0.139470013947001 0.048048048048048],...
'String','Quit',...
'Tag','pushbutton4',...
...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'pushbutton_run';

h6 = uicontrol(...
'Parent',h1,...
'Units','normalized',...
'FontUnits','normalized',...
'BackgroundColor',[0.588235294117647 0.796078431372549 0.796078431372549],...
'Callback','testmlx(''pushbutton_run_Callback'',gcbo,[],guidata(gcbo))',...
'FontSize',0.46031746031746,...
'ListboxTop',0,...
'Position',[0.864714086471409 0.913135593220339 0.111576011157601 0.0593220338983051],...
'String','RUN',...
'Tag','pushbutton_run',...
...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'text_h0';

h7 = uicontrol(...
'Parent',h1,...
'Units','normalized',...
'FontUnits','normalized',...
'FontName','times',...
'FontSize',0.805555555555556,...
'FontWeight','bold',...
'ListboxTop',0,...
'Position',[0.218967921896792 0.885593220338983 0.0864714086471409 0.06],...
'String','H_0',...
'Style','text',...
'Tag','text_h0',...
...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'text_h1';

h8 = uicontrol(...
'Parent',h1,...
'Units','normalized',...
'FontUnits','normalized',...
'FontName','times',...
'FontSize',0.805555555555556,...
'FontWeight','bold',...
'ListboxTop',0,...
'Position',[0.670850767085077 0.883474576271186 0.0864714086471409 0.06],...
'String','H_1',...
'Style','text',...
'Tag','text_h1',...
...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'res03';

h9 = uicontrol(...
'Parent',h1,...
'Units','normalized',...
'FontUnits','normalized',...
'BackgroundColor',[1 0.87843137254902 0.756862745098039],...
'CData',[],...
'FontSize',0.630434782608696,...
'ListboxTop',0,...
'Position',[0.206415620641562 0.0656779661016949 0.125523012552301 0.048728813559322],...
'Style','text',...
'Tag','res03',...
'UserData',[],...
...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'text13';

h10 = uicontrol(...
'Parent',h1,...
'Units','normalized',...
'FontUnits','normalized',...
'FontSize',0.630434782608696,...
'HorizontalAlignment','right',...
'ListboxTop',0,...
'Position',[0.470013947001395 0.0614406779661017 0.199442119944212 0.048728813559322],...
'String','- 2 x Log-likelihood:   ',...
'Style','text',...
'Tag','text13',...
...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'res13';

h11 = uicontrol(...
'Parent',h1,...
'Units','normalized',...
'FontUnits','normalized',...
'BackgroundColor',[1 0.87843137254902 0.756862745098039],...
'CData',[],...
'FontSize',0.630434782608696,...
'ListboxTop',0,...
'Position',[0.659693165969317 0.0656779661016949 0.125523012552301 0.048728813559322],...
'Style','text',...
'Tag','res13',...
'UserData',[],...
...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'pval';

h12 = uicontrol(...
'Parent',h1,...
'Units','normalized',...
'FontUnits','normalized',...
'BackgroundColor',[1 0.878000020980835 0.757000029087067],...
'CData',[],...
'FontSize',0.560386473429952,...
'ListboxTop',0,...
'Position',[0.832635983263598 0.0190677966101695 0.125523012552301 0.048728813559322],...
'Style','text',...
'Tag','pval',...
'UserData',[],...
...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'text7';

h13 = uicontrol(...
'Parent',h1,...
'Units','normalized',...
'FontUnits','normalized',...
'FontSize',0.630434782608696,...
'ListboxTop',0,...
'Position',[0.789400278940028 0.228813559322034 0.199442119944212 0.048728813559322],...
'String','Decision',...
'Style','text',...
'Tag','text7',...
...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'dec3';

h14 = uicontrol(...
'Parent',h1,...
'Units','normalized',...
'FontUnits','normalized',...
'BackgroundColor',[1 0.87843137254902 0.756862745098039],...
'CData',[],...
'FontSize',0.630434782608696,...
'FontWeight','bold',...
'ListboxTop',0,...
'Position',[0.832635983263598 0.0656779661016949 0.125523012552301 0.048728813559322],...
'Style','text',...
'Tag','dec3',...
'UserData',[],...
...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'text02';

h15 = uicontrol(...
'Parent',h1,...
'Units','normalized',...
'FontUnits','normalized',...
'FontSize',0.630434782608696,...
'HorizontalAlignment','right',...
'ListboxTop',0,...
'Position',[0.00557880055788006 0.120762711864407 0.199442119944212 0.048728813559322],...
'String','BIC:   ',...
'Style','text',...
'Tag','text02',...
...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'res02';

h16 = uicontrol(...
'Parent',h1,...
'Units','normalized',...
'FontUnits','normalized',...
'BackgroundColor',[1 0.87843137254902 0.756862745098039],...
'CData',[],...
'FontSize',0.630434782608696,...
'ListboxTop',0,...
'Position',[0.206415620641562 0.122881355932203 0.125523012552301 0.048728813559322],...
'Style','text',...
'Tag','res02',...
'UserData',[],...
...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'text12';

h17 = uicontrol(...
'Parent',h1,...
'Units','normalized',...
'FontUnits','normalized',...
'FontSize',0.630434782608696,...
'HorizontalAlignment','right',...
'ListboxTop',0,...
'Position',[0.470013947001395 0.125 0.199442119944212 0.048728813559322],...
'String','BIC:   ',...
'Style','text',...
'Tag','text12',...
...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'res12';

h18 = uicontrol(...
'Parent',h1,...
'Units','normalized',...
'FontUnits','normalized',...
'BackgroundColor',[1 0.87843137254902 0.756862745098039],...
'CData',[],...
'FontSize',0.630434782608696,...
'ListboxTop',0,...
'Position',[0.659693165969317 0.122881355932203 0.125523012552301 0.048728813559322],...
'Style','text',...
'Tag','res12',...
'UserData',[],...
...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'text01';

h19 = uicontrol(...
'Parent',h1,...
'Units','normalized',...
'FontUnits','normalized',...
'FontSize',0.630434782608696,...
'HorizontalAlignment','right',...
'ListboxTop',0,...
'Position',[0.00557880055788006 0.180084745762712 0.199442119944212 0.048728813559322],...
'String','AIC:   ',...
'Style','text',...
'Tag','text01',...
...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'res01';

h20 = uicontrol(...
'Parent',h1,...
'Units','normalized',...
'FontUnits','normalized',...
'BackgroundColor',[1 0.87843137254902 0.756862745098039],...
'CData',[],...
'FontSize',0.65,...
'ListboxTop',0,...
'Position',[0.206415620641562 0.182203389830508 0.125523012552301 0.048728813559322],...
'Style','text',...
'Tag','res01',...
'UserData',[],...
...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'text11';

h21 = uicontrol(...
'Parent',h1,...
'Units','normalized',...
'FontUnits','normalized',...
'FontSize',0.630434782608696,...
'HorizontalAlignment','right',...
'ListboxTop',0,...
'Position',[0.470013947001395 0.184322033898305 0.199442119944212 0.048728813559322],...
'String','AIC:   ',...
'Style','text',...
'Tag','text11',...
...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'res11';

h22 = uicontrol(...
'Parent',h1,...
'Units','normalized',...
'FontUnits','normalized',...
'BackgroundColor',[1 0.87843137254902 0.756862745098039],...
'CData',[],...
'FontSize',0.65,...
'ListboxTop',0,...
'Position',[0.659693165969317 0.182203389830508 0.125523012552301 0.048728813559322],...
'Style','text',...
'Tag','res11',...
'UserData',[],...
...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'dec2';

h23 = uicontrol(...
'Parent',h1,...
'Units','normalized',...
'FontUnits','normalized',...
'BackgroundColor',[1 0.87843137254902 0.756862745098039],...
'CData',[],...
'FontSize',0.630434782608696,...
'FontWeight','bold',...
'ListboxTop',0,...
'Position',[0.832635983263598 0.122881355932203 0.125523012552301 0.048728813559322],...
'Style','text',...
'Tag','dec2',...
'UserData',[],...
...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'dec1';

h24 = uicontrol(...
'Parent',h1,...
'Units','normalized',...
'FontUnits','normalized',...
'BackgroundColor',[1 0.87843137254902 0.756862745098039],...
'CData',[],...
'FontSize',0.65,...
'FontWeight','bold',...
'ListboxTop',0,...
'Position',[0.832635983263598 0.182203389830508 0.125523012552301 0.048728813559322],...
'Style','text',...
'Tag','dec1',...
'UserData',[],...
...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'text03';

h25 = uicontrol(...
'Parent',h1,...
'Units','normalized',...
'FontUnits','normalized',...
'FontSize',0.630434782608696,...
'HorizontalAlignment','right',...
'ListboxTop',0,...
'Position',[0.00557880055788006 0.0614406779661017 0.199442119944212 0.048728813559322],...
'String','- 2 x Log-likelihood:   ',...
'Style','text',...
'Tag','text03',...
...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, '', appdata} );


hsingleton = h1;


% --- Set application data first then calling the CreateFcn. 
function local_CreateFcn(hObject, eventdata, createfcn, appdata)

if ~isempty(appdata)
   names = fieldnames(appdata);
   for i=1:length(names)
       name = char(names(i));
       setappdata(hObject, name, getfield(appdata,name));
   end
end

if ~isempty(createfcn)
   eval(createfcn);
end


% --- Handles default GUIDE GUI creation and callback dispatch
function varargout = gui_mainfcn(gui_State, varargin)


%   GUI_MAINFCN provides these command line APIs for dealing with GUIs
%
%      TESTMLX, by itself, creates a new TESTMLX or raises the existing
%      singleton*.
%
%      H = TESTMLX returns the handle to a new TESTMLX or the handle to
%      the existing singleton*.
%
%      TESTMLX('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in TESTMLX.M with the given input arguments.
%
%      TESTMLX('Property','Value',...) creates a new TESTMLX or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before untitled_OpeningFunction gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to untitled_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".

%   Copyright 1984-2004 The MathWorks, Inc.
%   $Revision: 1.4.6.8 $ $Date: 2004/04/15 00:06:57 $

gui_StateFields =  {'gui_Name'
                    'gui_Singleton'
                    'gui_OpeningFcn'
                    'gui_OutputFcn'
                    'gui_LayoutFcn'
                    'gui_Callback'};
gui_Mfile = '';
for i=1:length(gui_StateFields)
    if ~isfield(gui_State, gui_StateFields{i})
        error('Could not find field %s in the gui_State struct in GUI M-file %s', gui_StateFields{i}, gui_Mfile);        
    elseif isequal(gui_StateFields{i}, 'gui_Name')
        gui_Mfile = [gui_State.(gui_StateFields{i}), '.m'];
    end
end

numargin = length(varargin);

if numargin == 0
    % TESTMLX
    % create the GUI
    gui_Create = 1;
elseif isequal(ishandle(varargin{1}), 1) && ispc && iscom(varargin{1}) && isequal(varargin{1},gcbo)
    % TESTMLX(ACTIVEX,...)    
    vin{1} = gui_State.gui_Name;
    vin{2} = [get(varargin{1}.Peer, 'Tag'), '_', varargin{end}];
    vin{3} = varargin{1};
    vin{4} = varargin{end-1};
    vin{5} = guidata(varargin{1}.Peer);
    feval(vin{:});
    return;
elseif ischar(varargin{1}) && numargin>1 && isequal(ishandle(varargin{2}), 1)
    % TESTMLX('CALLBACK',hObject,eventData,handles,...)
    gui_Create = 0;
else
    % TESTMLX(...)
    % create the GUI and hand varargin to the openingfcn
    gui_Create = 1;
end

if gui_Create == 0
    varargin{1} = gui_State.gui_Callback;
    if nargout
        [varargout{1:nargout}] = feval(varargin{:});
    else
        feval(varargin{:});
    end
else
    if gui_State.gui_Singleton
        gui_SingletonOpt = 'reuse';
    else
        gui_SingletonOpt = 'new';
    end
    
    % Open fig file with stored settings.  Note: This executes all component
    % specific CreateFunctions with an empty HANDLES structure.
    
    % Do feval on layout code in m-file if it exists
    if ~isempty(gui_State.gui_LayoutFcn)
        gui_hFigure = feval(gui_State.gui_LayoutFcn, gui_SingletonOpt);
        % openfig (called by local_openfig below) does this for guis without
        % the LayoutFcn. Be sure to do it here so guis show up on screen.
        movegui(gui_hFigure,'onscreen')
    else
        gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt);            
        % If the figure has InGUIInitialization it was not completely created
        % on the last pass.  Delete this handle and try again.
        if isappdata(gui_hFigure, 'InGUIInitialization')
            delete(gui_hFigure);
            gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt);            
        end
    end
    
    % Set flag to indicate starting GUI initialization
    setappdata(gui_hFigure,'InGUIInitialization',1);

    % Fetch GUIDE Application options
    gui_Options = getappdata(gui_hFigure,'GUIDEOptions');
    
    if ~isappdata(gui_hFigure,'GUIOnScreen')
        % Adjust background color
        if gui_Options.syscolorfig 
            set(gui_hFigure,'Color', get(0,'DefaultUicontrolBackgroundColor'));
        end

        % Generate HANDLES structure and store with GUIDATA
        guidata(gui_hFigure, guihandles(gui_hFigure));
    end
    
    % If user specified 'Visible','off' in p/v pairs, don't make the figure
    % visible.
    gui_MakeVisible = 1;
    for ind=1:2:length(varargin)
        if length(varargin) == ind
            break;
        end
        len1 = min(length('visible'),length(varargin{ind}));
        len2 = min(length('off'),length(varargin{ind+1}));
        if ischar(varargin{ind}) && ischar(varargin{ind+1}) && ...
                strncmpi(varargin{ind},'visible',len1) && len2 > 1
            if strncmpi(varargin{ind+1},'off',len2)
                gui_MakeVisible = 0;
            elseif strncmpi(varargin{ind+1},'on',len2)
                gui_MakeVisible = 1;
            end
        end
    end
    
    % Check for figure param value pairs
    for index=1:2:length(varargin)
        if length(varargin) == index
            break;
        end
        try set(gui_hFigure, varargin{index}, varargin{index+1}), catch break, end
    end

    % If handle visibility is set to 'callback', turn it on until finished
    % with OpeningFcn
    gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');
    if strcmp(gui_HandleVisibility, 'callback')
        set(gui_hFigure,'HandleVisibility', 'on');
    end
    
    feval(gui_State.gui_OpeningFcn, gui_hFigure, [], guidata(gui_hFigure), varargin{:});
    
    if ishandle(gui_hFigure)
        % Update handle visibility
        set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);
        
        % Make figure visible
        if gui_MakeVisible
            set(gui_hFigure, 'Visible', 'on')
            if gui_Options.singleton 
                setappdata(gui_hFigure,'GUIOnScreen', 1);
            end
        end

        % Done with GUI initialization
        rmappdata(gui_hFigure,'InGUIInitialization');
    end
    
    % If handle visibility is set to 'callback', turn it on until finished with
    % OutputFcn
    if ishandle(gui_hFigure)
        gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');
        if strcmp(gui_HandleVisibility, 'callback')
            set(gui_hFigure,'HandleVisibility', 'on');
        end
        gui_Handles = guidata(gui_hFigure);
    else
        gui_Handles = [];
    end
    
    if nargout
        [varargout{1:nargout}] = feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);
    else
        feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);
    end
    
    if ishandle(gui_hFigure)
        set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);
    end
end    

function gui_hFigure = local_openfig(name, singleton)

% openfig with three arguments was new from R13. Try to call that first, if
% failed, try the old openfig.
try 
    gui_hFigure = openfig(name, singleton, 'auto');
catch
    % OPENFIG did not accept 3rd input argument until R13,
    % toggle default figure visible to prevent the figure
    % from showing up too soon.
    gui_OldDefaultVisible = get(0,'defaultFigureVisible');
    set(0,'defaultFigureVisible','off');
    gui_hFigure = openfig(name, singleton);
    set(0,'defaultFigureVisible',gui_OldDefaultVisible);
end


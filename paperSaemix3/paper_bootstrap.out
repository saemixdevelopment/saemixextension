
R version 4.2.2 Patched (2022-11-10 r83330) -- "Innocent and Trusting"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R est un logiciel libre livré sans AUCUNE GARANTIE.
Vous pouvez le redistribuer sous certaines conditions.
Tapez 'license()' ou 'licence()' pour plus de détails.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Tapez 'demo()' pour des démonstrations, 'help()' pour l'aide
en ligne ou 'help.start()' pour obtenir l'aide au format HTML.
Tapez 'q()' pour quitter R.

[Sauvegarde de la session précédente restaurée]

> library(saemix)
Le chargement a nécessité le package : npde
Package saemix, version 3.2
  please direct bugs, questions and feedback to emmanuelle.comets@inserm.fr


Attachement du package : ‘saemix’

Les objets suivants sont masqués depuis ‘package:npde’:

    kurtosis, skewness

> saemixDir<-"/home/eco/work/saemix/saemixextension"
> workDir<-file.path(saemixDir,"paperSaemix3")
> nboot <- 5
> 
> # Sections to run (set to TRUE)
> 
> # binary data (toenail)
> runmodelBin <- FALSE
> 
> # categorical data (knee)
> runmodelCat <- TRUE
> runmodelCatCov <- FALSE
> 
> # count data (rapi)
> runmodelCount <- FALSE
> 
> # TTE model (lung)
> runbasemodelTTE <- FALSE
> runcovmodelContTTE<-FALSE
> runcovmodelCatTTE<-FALSE
> 
> ########################################################################################################
> #################################################### binary data: toenail
> 
> ########################################################################################################
> #################################################### categorical data: knee
> 
> if(runmodelCat || runmodelCatCov) {
+     # Data, restricted to the 2 covariates used in the model
+     data(knee.saemix)
+     ordknee.data<-saemixData(name.data=knee.saemix,name.group=c("id"),
+                             name.predictors=c("y", "time"), name.X=c("time"),
+                             name.covariates = c("treatment","Age2"),
+                             units=list(x="d",y="", covariates=c("-","yr2")), verbose=FALSE)
+ ordinal.model<-function(psi,id,xidep) {
+   y<-xidep[,1]
+   time<-xidep[,2]
+   alp1<-psi[id,1]
+   alp2<-psi[id,2]
+   alp3<-psi[id,3]
+   alp4<-psi[id,4]
+   beta<-psi[id,5]
+   
+   logit1<-alp1 + beta*time
+   logit2<-logit1+alp2
+   logit3<-logit2+alp3
+   logit4<-logit3+alp4
+   pge1<-exp(logit1)/(1+exp(logit1))
+   pge2<-exp(logit2)/(1+exp(logit2))
+   pge3<-exp(logit3)/(1+exp(logit3))
+   pge4<-exp(logit4)/(1+exp(logit4))
+   pobs = (y==1)*pge1+(y==2)*(pge2 - pge1)+(y==3)*(pge3 - pge2)+(y==4)*(pge4 - pge3)+(y==5)*(1 - pge4)
+   logpdf <- log(pobs)
+   
+   return(logpdf)
+ }
+ # simulate function
+ simulateOrdinal<-function(psi,id,xidep) {
+   y<-xidep[,1]
+   time<-xidep[,2]
+   alp1<-psi[id,1]
+   alp2<-psi[id,2]
+   alp3<-psi[id,3]
+   alp4<-psi[id,4]
+   beta<-psi[id,5]
+   
+   logit1<-alp1 + beta*time
+   logit2<-logit1+alp2
+   logit3<-logit2+alp3
+   logit4<-logit3+alp4
+   pge1<-exp(logit1)/(1+exp(logit1))
+   pge2<-exp(logit2)/(1+exp(logit2))
+   pge3<-exp(logit3)/(1+exp(logit3))
+   pge4<-exp(logit4)/(1+exp(logit4))
+   x<-runif(length(time))
+   ysim<-1+as.integer(x>pge1)+as.integer(x>pge2)+as.integer(x>pge3)+as.integer(x>pge4)
+   return(ysim)
+ }
+ }
> if(runmodelCat) {
+     # Model without covariate
+     saemix.model<-saemixModel(model=ordinal.model,description="Ordinal categorical model",modeltype="likelihood",
+                     simulate.function=simulateOrdinal, psi0=matrix(c(0,0.2, 0.6, 3, 0.2),ncol=5, byrow=TRUE, 
+                     dimnames=list(NULL,c("alp1","alp2","alp3","alp4","beta"))), transform.par=c(0,1,1,1,1),
+                     omega.init=diag(c(100, 1, 1, 1, 1)), covariance.model = diag(c(1,0,0,0,1)), verbose=FALSE)
+     saemix.options<-list(seed=632545,save=FALSE,save.graphs=FALSE, fim=FALSE, nb.chains=10, nbiter.saemix=c(600,100), print=FALSE)
+     ord.fit<-saemix(saemix.model,ordknee.data,saemix.options)            
+     case.ordinal <- saemix.bootstrap(ord.fit, method="case", nboot=nboot) 
+     write.table(case.ordinal,file.path(workDir, "bootstrapCase_knee.res"), row.names = FALSE, quote=F)
+     cond.ordinal <- saemix.bootstrap(ord.fit, method="conditional", nboot=nboot) 
+     write.table(cond.ordinal,file.path(workDir, "bootstrapCond_kneeCov.res"), row.names = FALSE, quote=F)
+     }
Error in initialiseMainAlgo(saemix.data, saemix.model, saemix.options) : 
  stats:fit.saemix:FailedInitialParameterGuess
Failed to find a valid initial parameter guess

Error in initialiseMainAlgo(saemix.data, saemix.model, saemix.options) : 
  stats:fit.saemix:FailedInitialParameterGuess
Failed to find a valid initial parameter guess

Error in initialiseMainAlgo(saemix.data, saemix.model, saemix.options) : 
  stats:fit.saemix:FailedInitialParameterGuess
Failed to find a valid initial parameter guess

Error in initialiseMainAlgo(saemix.data, saemix.model, saemix.options) : 
  stats:fit.saemix:FailedInitialParameterGuess
Failed to find a valid initial parameter guess

Error in initialiseMainAlgo(saemix.data, saemix.model, saemix.options) : 
  stats:fit.saemix:FailedInitialParameterGuess
Failed to find a valid initial parameter guess

Erreur dans saemix.bootstrap(ord.fit, method = "case", nboot = nboot) : 
  objet 'res' introuvable
Exécution arrêtée
